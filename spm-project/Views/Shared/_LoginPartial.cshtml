@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<div class="d-flex align-items-stretch ms-1 ms-lg-3">
    @if (SignInManager.IsSignedIn(User))
    {
        @*<li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
            </li>*@

        @*<li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>*@

        @*<div class="menu-item px-5">
            <a class="menu-link px-5" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">Sign Out</a>
        </div>*@

        <form class="form-inline" asp-controller="Home" asp-action="Logout">
            <button type="submit" class="nav-link btn btn-link text-info">Logout</button>
        </form>



        <div class="menu-item px-5">
            @{
                var person = await UserManager.GetUserAsync(User);
                <span>Hello @person.Name</span>
            }
        </div>

    }
    else
    {
        @*<li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>*@



        <div class="menu-item px-5">
            <a class="menu-link px-5" asp-area="Identity" asp-page="/Account/Login">Log in</a>
        </div>
    }
    
</div>